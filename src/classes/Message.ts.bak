import Phaser from 'phaser';

export default class Message extends Phaser.GameObjects.Container {
    private text: Phaser.GameObjects.Text;
    private hideEvent: Phaser.Time.TimerEvent | undefined;

    constructor(scene, events) {
        super(scene, 160, 30);
        const graphics = this.scene.add.graphics();
        this.add(graphics);
        graphics.lineStyle(1, 0xffffff, 0.8);
        graphics.fillStyle(0x031f4c, 1);
        graphics.strokeRect(-90, -15, 500, 500);
        graphics.fillRect(-90, -15, 500, 500);
        this.text = new Phaser.GameObjects.Text(scene, 0, 0, '', {color: '#ffffff', align: 'center', fontSize: '45', wordWrap: {width: 160, useAdvancedWrap: true}});
        this.add(this.text);
        this.text.setOrigin(0.5);
        events.on('Message', this.showMessage, this);
        this.visible = false;
    }

    showMessage(text: string) {
        console.log(text);
        this.text.setText(text);
        this.visible = true;
        if (this.hideEvent) {
            this.hideEvent.remove(false);
        }
        this.hideEvent = this.scene.time.addEvent({delay: 2000, callback: this.hideMessage, callbackScope: this});
    }

    hideMessage() {
        this.hideEvent = undefined;
        this.visible = false;
    }
}